# no punctuation, no tatweel, no diacritics, no dotted letters
# python main.py --config-path="dataset_configs/arabic/youtube/" --config-name="config_hf.yaml"

processors_to_run: "0:"

split: test # specify dataset type (clean_train, clean_test, ...)
raw_dataset_dir: /home/lgrigoryan/datasets/everyayah
dataset_dir: workdir/huggingface
workspace_dir: /home/lgrigoryan/prog/asr_commonvoice_finetuning/NeMo-speech-data-processor/workdir/huggingface/${split}

min_duration: 1 # minimal duration of the segment
max_duration: 25.0 # maximal duration of the segment
min_wordrate: 0.8 # minimal wordrate
max_wordrate: 3 # maximal wordrate

processors:
  # 0 creating manifest {sample_id, audio_path}
  - _target_: sdp.processors.CreateInitialManifestHuggingFace
    raw_dataset_dir: ${raw_dataset_dir}
    dataset_dir: ${dataset_dir}/${split}
    data_split: ${split}
    target_samplerate: 16000
    output_manifest_file: ${workspace_dir}/manifest0.json

  # # 1 Dropping too short and too long segments
  # - _target_: sdp.processors.DropHighLowDuration
  #   high_duration_threshold: ${max_duration}
  #   low_duration_threshold: ${min_duration}
  #   duration_key: duration
  #   output_manifest_file: ${workspace_dir}/manifest1.json

  # # 2 dropping high low wordrate samples
  # - _target_: sdp.processors.DropHighLowWordrate
  #   text_key: text
  #   high_wordrate_threshold: ${max_wordrate}
  #   low_wordrate_threshold: ${min_wordrate}
  #   output_manifest_file: ${workspace_dir}/manifest2.json

  # # 3 replacing punctuation marks
  # - _target_: sdp.processors.SubRegex
  #   text_key: text
  #   regex_params_list:
  #     - { "pattern": "&lrm;", "repl": "" }
  #     - { "pattern": "&rlm;", "repl": "" }
  #     - { "pattern": "'", "repl": "" }
  #     - { "pattern": "’", "repl": "" }
  #     - { "pattern": "‘", "repl": "" }
  #     - { "pattern": "’", "repl": "" }
  #     - { "pattern": "‘", "repl": "" }
  #     - { "pattern": "٬", "repl": "" }
  #     - { "pattern": '"', "repl": "" }
  #     - { "pattern": "…", "repl": " " }
  #     - { "pattern": "«", "repl": " " }
  #     - { "pattern": "»", "repl": " " }
  #     - { "pattern": "“", "repl": " " }
  #     - { "pattern": "”", "repl": " " }
  #     - { "pattern": "☭", "repl": "" }
  #     - { "pattern": "\\s+", "repl": " " }
  #     - { "pattern": "\\[\\.\\]+", "repl": "." }
  #     - { "pattern": "\u0670", "repl": "" } # removing small alif
  #     - { "pattern": "\u06CC", "repl": "\u064A" } # replacing arabic letter farsi yeh with yeh
  #     - { "pattern": "\u06A9", "repl": "\u063A" } # replacing arabic letter keheh yeh with kaf
    # output_manifest_file: ${workspace_dir}/manifest3.json

  # 3 removing punctuation, diacritics, dotted letters and tatweel
  - _target_: sdp.processors.ArabicTextPreprocessor
    input_text_key: text
    remove_diacritics: False
    remove_punctuation: True
    normalize_dots: False
    remove_tatweel: True
    pyarabic_normalize: True
    reduce_diacritics: False
    output_manifest_file: ${workspace_dir}/manifest4.json

  # 4 dropping non alphabetical symbols
  - _target_: sdp.processors.DropNonAlphabet
    # alphabet: " \u0621\u0622\u0623\u0624\u0625\u0626\u0627\u0628\u0629\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\u0638\u0639\u063A\u0640\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u0649\u064A"
    # alphabet: " \u0627\u0628\u062A\u062B\u062C\u062D\u062E\u062F\u0630\u0631\u0632\u0633\u0634\u0635\u0636\u0637\u0638\u0639\u063A\u0641\u0642\u0643\u0644\u0645\u0646\u0647\u0648\u064A \u0621"
    alphabet: " \u0631\u0630\u062F\u062E\u062D\u062C\u062B\u062A\u0629\u0628\u0627\u0626\u0625\u0624\u0623\u0622\u0621\u064A\u0649\u0648\u0647\u0646\u0645\u0644\u0643\u0642\u0641\u063A\u0639\u0638\u0637\u0636\u0635\u0634\u0633\u0632\u064B\u064C\u064D\u064E\u064F\u0650\u0651\u0652"
    output_manifest_file: ${workspace_dir}/manifest5.json
